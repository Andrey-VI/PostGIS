
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 
-- $Id$
--
-- PostGIS - Spatial Types for PostgreSQL
-- http://postgis.refractions.net
-- Copyright 2001-2003 Refractions Research Inc.
--
-- This is free software; you can redistribute and/or modify it under
-- the terms of hte GNU General Public Licence. See the COPYING file.
--  
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- $Log$
-- Revision 1.2  2003/07/01 18:30:55  pramsey
-- Added CVS revision headers.
--
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


--
-- GiST support functions
--

CREATE FUNCTION ggeometry_consistent(opaque,geometry,int4) 
	RETURNS bool 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION ggeometry_compress(opaque) 
	RETURNS opaque 
	AS '@MODULE_FILENAME@'
	LANGUAGE 'C';

CREATE FUNCTION ggeometry_penalty(opaque,opaque,opaque) 
	RETURNS opaque 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION ggeometry_picksplit(opaque, opaque) 
	RETURNS opaque 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION ggeometry_union(bytea, opaque) 
	RETURNS opaque 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION ggeometry_same(opaque, opaque, opaque) 
	RETURNS opaque 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION rtree_decompress(opaque) 
	RETURNS opaque
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

--
-- R-Tree support functions
--

CREATE FUNCTION geometry_union(geometry,geometry) 
	RETURNS geometry 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION geometry_inter(geometry,geometry) 
	RETURNS geometry 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

CREATE FUNCTION geometry_size(geometry,opaque) 
	RETURNS float4 
	AS '@MODULE_FILENAME@' 
	LANGUAGE 'C';

INSERT INTO pg_opclass (opcname, opcdeftype)
	SELECT 'gist_geometry_ops', oid
	FROM pg_type
	WHERE typname = 'geometry';

SELECT o.oid AS opoid, o.oprname
	INTO TABLE rt_ops_tmp
	FROM pg_operator o, pg_type t
	WHERE o.oprleft = t.oid AND t.typname = 'geometry';

-- box_left
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy) 
	SELECT am.oid, opcl.oid, c.opoid, 1
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '<<';

-- box_overleft
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy) 
	SELECT am.oid, opcl.oid, c.opoid, 2
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '&<';

-- box_overlap
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy) 
	SELECT am.oid, opcl.oid, c.opoid, 3
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '&&';

-- box_overright
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy) 
	SELECT am.oid, opcl.oid, c.opoid, 4
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '&>';

-- box_right
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy)
	SELECT am.oid, opcl.oid, c.opoid, 5
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '>>';

-- box_same
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy) 
	SELECT am.oid, opcl.oid, c.opoid, 6
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '~=';

-- box_contains
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy)
	SELECT am.oid, opcl.oid, c.opoid, 7
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '~';

-- box_contained
INSERT INTO pg_amop (amopid, amopclaid, amopopr, amopstrategy)
	SELECT am.oid, opcl.oid, c.opoid, 8
	FROM pg_am am, pg_opclass opcl, rt_ops_tmp c
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops' 
		AND c.oprname = '@';

DROP TABLE rt_ops_tmp;

--
-- Add the entries to amproc for the support methods.
-- Note the amprocnum numbers associated with each are specific!
--

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 1
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_consistent';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 2
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_union';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 3
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_compress';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 4
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'rtree_decompress';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 5
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_penalty';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 6
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_picksplit';

INSERT INTO pg_amproc (amid, amopclaid, amproc, amprocnum)
	SELECT am.oid, opcl.oid, pro.oid, 7
	FROM pg_am am, pg_opclass opcl, pg_proc pro
	WHERE amname = 'gist' AND opcname = 'gist_geometry_ops'
		AND proname = 'ggeometry_same';

END TRANSACTION;
