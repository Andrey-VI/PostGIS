PostGIS WKT Raster - Seamless operations between vector and raster layers
-------------------------------------------------------------------------
http://www.postgis.org/support/wiki/index.php?WKTRasterHomePage


PostGIS Raster's goal is to implement the RASTER type as much as possible
like the GEOMETRY type is implemented in PostGIS and to offer a single
set of overlay SQL functions (like ST_Intersects) operating seamlessly
on vector and raster coverages.

raster/rt_core/ contains the primitives to deal with rasters in memory,
the function to serialize/deserialize both in-memory and on-disk
rasters, the functions to parse and output (hex)wkb.
You can see raster/rt_core/testapi.c and raster/rt_core/testwkb.c for 
example usage.

raster/rt_pg/ contains postgresql-specific wrappers, and SQL code to define
the RASTER type.

raster/doc/ contains technical references and RFC documents.

REQUIREMENTS
------------

PostGIS Raster core lib depends on liblwgeom, as found in postgis
source package as of SVN 2009-01 (latest 1.3.5 release won't work).

Some PostGIS Raster functions depends on GDAL library version 1.6.0 or
higher

PostGIS Raster loader dependes on Python GDAL bindings.

PostgreSQL interface depends on PostgreSQL version 8.3.5.


BUILD
-----

To build PostGIS with raster support:

    $ ./configure --with-raster
    $ make

Note that the 'configure' script isn't there if you fetched
the code from the SVN repository. In that case running ./autogen.sh
should create it for you.

Under MinGW you might have to add "--with-pgconfig=/usr/local/pgsql/bin/pg_config" if 
configure can't find your pgsql path.


PRE-INSTALL TEST
----------------

After a successful build, you can run:

    $ make raster-check

It won't test postgresql interface, as that would require more setup
then a simple make check. See POST-INSTALL TESTING for more info on how
to test that part.

INSTALL
-------

You need to install the library to the postgresql library
directory. You do it by running:

    $ sudo make install

POST-INSTALL TEST
-----------------

You can run the post install tests against it:

    $ make raster-post-install-check

USE
---

In order to enable your databases to use the raster
functionalities you have to feed them the enabler script:

    $ psql -f raster/rt_pg/rtpostgis.sql $MYDB

Note that you must have loaded PostGIS in the database
in order for that to work (see PostGIS documentation
for how to do that).

