#!/bin/sh

DB=postgis_reg

###################################################
#
# Usage ./run_test <testname> [<testname>]
#
# Create the spatial database 'postgis_reg'
# (or whatever $DB is set to) if it doesn't
# already exist.
#
# Run the <testname>.sql script
# Diff output against <testname>_expected
#
#
###################################################

export PGOPTIONS="${PGOPTIONS} -c lc_messages=C"

if [ -z "$TMPDIR" ]; then
	TMPDIR=/tmp
fi

if [ -z "$1" ]; then
	echo "Usage: $0 <test> [<test>]" >&2
	exit 1;
fi

db_exists=`psql -l | grep -w ${DB}`
if [ -z "$db_exists" ]; then
	echo
	echo "Creating spatial db ${DB} " 

	createdb $DB > /dev/null
	createlang plpgsql $DB > /dev/null
	psql -f ../lwpostgis.sql $DB > /dev/null 2>&1
fi

libver=`psql -tAc "select postgis_lib_version()" $DB`

if [ -z "$libver" ]; then
	echo
	echo "Something went wrong (no postgis installed in $DB)" 
	echo
	exit 1
fi

geosver=`psql -tAc "select postgis_geos_version()" $DB`
jtsver=`psql -tAc "select postgis_jts_version()" $DB`
projver=`psql -tAc "select postgis_proj_version()" $DB`
libbuilddate=`psql -tAc "select postgis_lib_build_date()" $DB`
pgsqlver=`psql -tAc "select version()" $DB`

echo
echo " $pgsqlver"
echo " Postgis $libver - $libbuilddate"
if [ -n "$geosver" ]; then
	echo "   GEOS: $geosver"
fi
if [ -n "$jtsver" ]; then
	echo "   JTS: $jtsver"
fi
if [ -n "$projver" ]; then
	echo "   PROJ: $projver"
fi

echo 
echo "Running tests"
echo

RUN=0
SKIP=0
FAIL=0
SUCCESS=0
while [ -n "$1" ]; do

	TEST="$1"; shift;

	# catch a common mistake (strip trailing .sql)
	TEST=`echo "$TEST" | sed 's/\.sql$//'`

	OUTFILE="${TMPDIR}/regress_${TEST}_out_$$"
	TMPFILE="${TMPDIR}/regress_${TEST}_tmp_$$"
	DIFFILE="${TMPDIR}/regress_${TEST}_diff_$$"

	printf %20s " ${TEST}: "
	#echo -ne " ${TEST}:\t"

	if [ ! -r "${TEST}.sql" ]; then
		echo "Skipped (can't read ${TEST}.sql)"
		SKIP=`expr $SKIP + 1`
		continue
	fi

	if [ ! -r "${TEST}_expected" ]; then
		echo " Skipped (can't read ${TEST}_expected)"
		SKIP=`expr $SKIP + 1`
		continue
	fi

	# Use intermediate file to prevent MingW buffering problems
	psql -tA < "${TEST}.sql" $DB > ${TMPFILE} 2>&1
	cat ${TMPFILE} \
		| grep -v "^$" \
		| grep -v "^INSERT" \
		| grep -v "^UPDATE" \
		| grep -v "^DROP" \
		| grep -v "^CREATE" \
		| grep -v "^SET" \
		| sed 's/Infinity/inf/g;s/Inf/inf/g;s/1\.#INF/inf/g' \
		| sed 's/[eE]\([+-]\)0\{1,\}\([0-9]\{1,\}\)/e\1\2/g' \
		> "${OUTFILE}"
	rm ${TMPFILE}

	if diff "${TEST}_expected" "${OUTFILE}" > ${DIFFILE}; then
		SUCCESS=`expr $SUCCESS + 1`
		echo "Ok."
		rm "${OUTFILE}" "${DIFFILE}" # we don't need these anymore
	else
		FAIL=`expr $FAIL + 1`
		echo "Failed (diff ${DIFFILE})" # expected:'<'     obtained:'>'"
		rm "${OUTFILE}" # diff is enough
	fi
	RUN=`expr $RUN + 1`

done

echo
echo "Run tests: $RUN"
#echo "Skipped: $SKIP"
echo "Successful: $SUCCESS"
echo "Failed: $FAIL"

#sleep 1
#dropdb $DB > /dev/null

